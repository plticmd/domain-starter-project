{"ast":null,"code":"var _jsxFileName = \"/Users/007/DEV/Unchain/cool-domains/frontend/domain-starter-project/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_UNCHAIN';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst tld = \".ninja\";\nconst CONTRACT_ADDRESS = \"YOUR_CONTRACT_ADDRESS_HERE\";\nconst App = () => {\n  _s();\n  //ユーザーのウォレットアドレスをstate管理しています。冒頭のuseStateのインポートを忘れないでください。\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  // state管理するプロパティを追加しています。\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n\n  // connectWallet 関数を定義\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get Metamask -> https://metamask.io/\");\n        return;\n      }\n\n      // アカウントへのアクセスを要求するメソッドを使用します。\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // Metamask を一度認証すれば Connected とコンソールに表示されます。\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // ウォレットの接続を確認します。\n  //const checkIfWalletIsConnected = () => {\n  const checkIfWalletIsConnected = async () => {\n    // window.ethereumの設定。この表記法はJavascriptの「分割代入」を参照。\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask!\");\n      return;\n    } else {\n      console.log(\"You have the ethereum object\", ethereum);\n    }\n\n    // ユーザーのウォレットをリクエストします。\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    // ユーザーが複数のアカウントを持っている場合もあります。ここでは最初のアドレスを使います。\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n  const mintDomain = async () => {\n    // ドメインがnullのときrunしません。\n    if (!domain) {\n      return;\n    }\n    // ドメインが3文字に満たない、短すぎる場合にアラートを出します。\n    if (domain.length < 3) {\n      alert(\"Domain must be at least 3 characters long\");\n      return;\n    }\n    // ドメインの文字数に応じて価格を計算します。\n    // 3 chars = 0.05 MATIC, 4 chars = 0.03 MATIC, 5 or more = 0.01 MATIC\n    const price = domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        // ミントされるまでトランザクションを待ちます。\n        const receipt = await tx.wait();\n\n        // トランザクションが問題なく実行されたか確認します。\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // domain,recordをセットします。\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // まだウォレットに接続されていない場合のレンダリングです。\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/yy6hXyy2DsM5W/giphy-downsized-large.gif\"\n      //src = \"https://media.giphy.com/media/1msxZUIsqN5pide6o5/giphy.gif\" \n      //src = \"https://media.giphy.com/media/iDJQRjTCenF7A4BRyU/giphy.gif\"\n      //src = \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n      ,\n      alt: \"Ninja gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 2\n  }, this);\n\n  // ドメインネームとデータの入力フォームです。\n  const renderInputForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur ninja power\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-buton mint-button\"\n          //disabled={null}\n          ,\n          onClick: null,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 3\n    }, this);\n  };\n\n  // ページがリロードされると呼び出されます。\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Ninja Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"gnw9gOb14qiy/+I0Qvv12/uQdwk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","_s","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletIsConnected","length","account","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","contractAbi","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","renderNotConnectedContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderInputForm","type","placeholder","onChange","e","target","href","rel","_c","$RefreshReg$"],"sources":["/Users/007/DEV/Unchain/cool-domains/frontend/domain-starter-project/src/App.js"],"sourcesContent":["// import React from 'react';\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\"\nimport {ethers} from \"ethers\";\n\n// Constants\nconst TWITTER_HANDLE = '_UNCHAIN';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst tld = \".ninja\";\nconst CONTRACT_ADDRESS = \"YOUR_CONTRACT_ADDRESS_HERE\";\n\nconst App = () => {\n  //ユーザーのウォレットアドレスをstate管理しています。冒頭のuseStateのインポートを忘れないでください。\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  // state管理するプロパティを追加しています。\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n\n  // connectWallet 関数を定義\n  const connectWallet = async () => {\n\ttry {\n\t\tconst { ethereum } = window;\n\n\t\tif (!ethereum) {\n\t\t\talert(\"Get Metamask -> https://metamask.io/\");\n\t\t\treturn;\n\t\t}\n\n\t\t// アカウントへのアクセスを要求するメソッドを使用します。\n\t\tconst accounts = await ethereum.request({\n\t\t\tmethod: \"eth_requestAccounts\"\n\t\t});\n\n\t\t// Metamask を一度認証すれば Connected とコンソールに表示されます。\n\t\tconsole.log(\"Connected\", accounts[0]);\n\t\tsetCurrentAccount(accounts[0]);\n\t} catch (error) {\n\t  console.log(error);\n\t}\n  };\n  // ウォレットの接続を確認します。\n  //const checkIfWalletIsConnected = () => {\n  const checkIfWalletIsConnected = async () => {\n\t // window.ethereumの設定。この表記法はJavascriptの「分割代入」を参照。\n\t const {ethereum} = window;\n\n\t if (!ethereum) {\n\t\tconsole.log(\"Make sure you have Metamask!\");\n\t\treturn;\n\t } else {\n\t\tconsole.log(\"You have the ethereum object\", ethereum);\n\t }\n\n\t // ユーザーのウォレットをリクエストします。\n\t const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n\t // ユーザーが複数のアカウントを持っている場合もあります。ここでは最初のアドレスを使います。\n\t if (accounts.length !==0) {\n\t\tconst account = accounts[0];\n\t\tconsole.log(\"Found an authorized account:\", account);\n\t\tsetCurrentAccount(account);\n\t } else {\n\t\tconsole.log(\"No authorized account found\");\n\t }\n  };\n\n\n\nconst mintDomain = async () => {\n\t// ドメインがnullのときrunしません。\n\tif (!domain) {\n\t\treturn;\n\t}\n\t// ドメインが3文字に満たない、短すぎる場合にアラートを出します。\n\tif (domain.length < 3) {\n\t\talert(\"Domain must be at least 3 characters long\");\n\t\treturn;\n\t}\n\t// ドメインの文字数に応じて価格を計算します。\n  \t// 3 chars = 0.05 MATIC, 4 chars = 0.03 MATIC, 5 or more = 0.01 MATIC\n\tconst price = \n\t\tdomain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n\tconsole.log(\"Minting domain\", domain, \"with price\", price);\n\ttry {\n\t\tconst {ethereum} = window;\n\t\tif (ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst contract = new ethers.Contract(\n\t\t\t\tCONTRACT_ADDRESS,\n\t\t\t\tcontractAbi.abi,\n\t\t\t\tsigner\n\t\t\t);\n\n\t\t\tconsole.log(\"Going to pop wallet now to pay gas...\");\n\t\t\tlet tx = await contract.register(domain, {\n\t\t\t\tvalue: ethers.utils.parseEther(price),\n\t\t\t});\n\t\t\t// ミントされるまでトランザクションを待ちます。\n\t\t\tconst receipt = await tx.wait();\n\n\t\t\t// トランザクションが問題なく実行されたか確認します。\n\t\t\tif (receipt.status === 1) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash\n\t\t\t\t);\n\n\t\t\t\t// domain,recordをセットします。\n\t\t\t\ttx = await contract.setRecord(domain, record);\n\t\t\t\tawait tx.wait();\n\n\t\t\t\tconsole.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n\t\t\t\tsetRecord(\"\");\n\t\t\t\tsetDomain(\"\");\n\t\t\t} else {\n\t\t\t\talert(\"Transaction failed! Please try again\");\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t  console.log(error);\n\t}\n};\n\n\n\n   // まだウォレットに接続されていない場合のレンダリングです。\n   const renderNotConnectedContainer = () => (\n\t<div className = \"connect-wallet-container\">\n\t\t<img\n\t\t  src = \"https://media.giphy.com/media/yy6hXyy2DsM5W/giphy-downsized-large.gif\"\n\t\t  //src = \"https://media.giphy.com/media/1msxZUIsqN5pide6o5/giphy.gif\" \n\t\t  //src = \"https://media.giphy.com/media/iDJQRjTCenF7A4BRyU/giphy.gif\"\n\t\t  //src = \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n\t\t  alt = \"Ninja gif\"\n\t\t/>\n\t\t{/* Connect Wallet ボタンが押されたときのみ connectWallet関数 を呼び出します。 */}\n\t\t{/* <button className = \"cta-button connect-wallet-button\"> */}\n\t\t<button \n\t\t\tonClick={connectWallet}\n\t\t\tclassName = \"cta-button connect-wallet-button\"\n\t\t>\n\t\t\tConnect Wallet\n\t\t</button>\n\t</div>\n   );\n\n   // ドメインネームとデータの入力フォームです。\n   const renderInputForm = () => {\n\treturn (\n\t\t<div className=\"form-container\">\n\t\t\t<div className=\"first-row\">\n\t\t\t\t<input\n\t\t\t\t  type=\"text\"\n\t\t\t\t  value={domain}\n\t\t\t\t  placeholder=\"domain\"\n\t\t\t\t  onChange={(e) => setDomain(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<p className=\"tld\"> {tld} </p>\n\t\t\t</div>\n\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={record}\n\t\t\t\tplaceholder=\"whats ur ninja power\"\n\t\t\t\tonChange={(e) => setRecord(e.target.value)}\n\t\t\t/>\n\n\t\t\t<div className=\"button-container\">\n\t\t\t\t{/* ボタンクリックで mintDomain関数 を呼び出します。 */}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"cta-buton mint-button\"\n\t\t\t\t\t//disabled={null}\n\t\t\t\t\tonClick={null}\n\t\t\t\t>\n\t\t\t\t\tMint\n\t\t\t\t</button>\n\t\t\t\t{/* <button\n\t\t\t\t\tclassName=\"cta-button mint-button\"\n\t\t\t\t\tdisabled={null}\n\t\t\t\t\tonClick={null}\n\t\t\t\t>\n\t\t\t\t\tSet data\n\t\t\t\t</button> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n   };\n\n   // ページがリロードされると呼び出されます。\n   useEffect(() => {\n\tcheckIfWalletIsConnected();\n   },[]);\n\n  return (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<header>\n            \t\t\t<div className=\"left\">\n             \t\t\t\t <p className=\"title\">🐱‍👤 Ninja Name Service</p>\n             \t\t\t\t <p className=\"subtitle\">Your API on the blockchain!</p>\n            \t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\n\t\t\t\t{/* currentAccount が存在しない場合、Connect Wallet ボタンを表示します*/}\n\t\t\t\t{!currentAccount && renderNotConnectedContainer()}\n\t\t\t\t{/* アカウントが接続されるとインプットフォームをレンダリングします。 */}\n\t\t\t\t{currentAccount && renderInputForm()}\n\n\t\t\t\t{/* render 関数をここに追加します */}\n\t\t\t\t{/* {renderNotConnectedContainer()} */}\n\n        \t\t<div className=\"footer-container\">\n\t\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"footer-text\"\n\t\t\t\t\t\thref={TWITTER_LINK}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{`built with @${TWITTER_HANDLE}`}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}