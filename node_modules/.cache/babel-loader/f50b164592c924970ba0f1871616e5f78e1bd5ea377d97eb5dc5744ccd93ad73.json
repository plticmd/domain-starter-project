{"ast":null,"code":"var _jsxFileName = \"/Users/007/DEV/Unchain/cool-domains/frontend/domain-starter-project/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\nimport contractAbi from \"./utils/contractABI.json\";\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { networks } from './utils/networks';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_UNCHAIN';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst tld = \".APT\";\n//\"YOUR_CONTRACT_ADDRESS_HERE\"\nconst CONTRACT_ADDRESS = \"0x57BD9C3BE3e28d8084B7e462e69a611be117837E\";\nconst App = () => {\n  _s();\n  //ユーザーのウォレットアドレスをstate管理しています。冒頭のuseStateのインポートを忘れないでください。\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  // state管理するプロパティを追加しています。\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  // network を状態変数として設定します。\n  const [network, setNetwork] = useState(\"\");\n  // 新しい状態変数を定義しています。これまでのものの下に追加しましょう。\n  const [editing, setEditing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  // 状態を管理する mints を定義します。初期状態は空の配列です。\n  const [mints, setMints] = useState([]);\n\n  // connectWallet 関数を定義\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get Metamask -> https://metamask.io/\");\n        return;\n      }\n\n      // アカウントへのアクセスを要求するメソッドを使用します。\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // Metamask を一度認証すれば Connected とコンソールに表示されます。\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const switchNetwork = async () => {\n    if (window.ethereum) {\n      try {\n        // Mumbai testnet に切り替えます。\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '0x13881'\n          }] // utilsフォルダ内のnetworks.js を確認しましょう。0xは16進数です。\n        });\n      } catch (error) {\n        // このエラーコードは当該チェーンがメタマスクに追加されていない場合です。\n        // その場合、ユーザーに追加するよう促します。\n        if (error.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x13881',\n                chainName: 'Polygon Mumbai Testnet',\n                rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n                nativeCurrency: {\n                  name: \"Mumbai Matic\",\n                  symbol: \"MATIC\",\n                  decimals: 18\n                },\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n              }]\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    } else {\n      // window.ethereum が見つからない場合メタマスクのインストールを促します。\n      alert('Metamask is not installed. Please install it to use this app: https://metamask.io/download.html');\n    }\n  };\n\n  // ウォレットの接続を確認します。\n  //const checkIfWalletIsConnected = () => {\n  const checkIfWalletIsConnected = async () => {\n    // window.ethereumの設定。この表記法はJavascriptの「分割代入」を参照。\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask!\");\n      return;\n    } else {\n      console.log(\"You have the ethereum object\", ethereum);\n    }\n\n    // ユーザーのウォレットをリクエストします。\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    // ユーザーが複数のアカウントを持っている場合もあります。ここでは最初のアドレスを使います。\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n\n    // ユーザーのネットワークのチェーンIDをチェックします。\n    const chainId = await ethereum.request({\n      method: 'eth_chainId'\n    });\n    setNetwork(networks[chainId]);\n    ethereum.on('chainChanged', handleChainChanged);\n\n    // ネットワークが変わったらリロードします。\n    function handleChainChanged(_chainId) {\n      window.location.reload();\n    }\n  };\n  const mintDomain = async () => {\n    // ドメインがnullのときrunしません。\n    if (!domain) {\n      return;\n    }\n    // ドメインが3文字に満たない、短すぎる場合にアラートを出します。\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    }\n    // ドメインの文字数に応じて価格を計算します。\n    // 3 chars = 0.05 MATIC, 4 chars = 0.03 MATIC, 5 or more = 0.01 MATIC\n    const price =\n    // domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    domain.length === 3 ? '0.005' : domain.length === 4 ? '0.003' : '0.001';\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        // ミントされるまでトランザクションを待ちます。\n        const receipt = await tx.wait();\n\n        // トランザクションが問題なく実行されたか確認します。\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // domainのrecordをセットします。\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // fetchMints関数実行後2秒待ちます。\n          setTimeout(() => {\n            fetchMints();\n          }, 2000);\n          setRecord('');\n          setDomain('');\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchMints = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n\n        // すべてのドメインを取得します。\n        const names = await contract.getAllNames();\n\n        // ネームごとにレコードを取得します。マッピングの対応を理解しましょう。\n        const mintRecords = await Promise.all(names.map(async name => {\n          const mintRecord = await contract.records(name);\n          const owner = await contract.domains(name);\n          return {\n            id: names.indexOf(name),\n            name: name,\n            record: mintRecord,\n            owner: owner\n          };\n        }));\n        console.log(\"MINTS FETCHED\", mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateDomain = async () => {\n    if (!record || !domain) {\n      return;\n    }\n    setLoading(true);\n    console.log(\"Updating domain\", domain, \"with record\", record);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        let tx = await contract.setRecord(domain, record);\n        await tx.wait();\n        console.log(\"Record set https://mumbai.polygonscan.com/tx/\" + tx.hash);\n        fetchMints();\n        setRecord('');\n        setDomain('');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // まだウォレットに接続されていない場合のレンダリングです。\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/yy6hXyy2DsM5W/giphy-downsized-large.gif\"\n      //src = \"https://media.giphy.com/media/1msxZUIsqN5pide6o5/giphy.gif\" \n      //src = \"https://media.giphy.com/media/iDJQRjTCenF7A4BRyU/giphy.gif\"\n      //src = \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n      ,\n      alt: \"Ninja gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: [\"Connect Wallet \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDD1CClutch Switch Engage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 2\n  }, this);\n\n  // ドメインネームとデータの入力フォームです。\n  const renderInputForm = () => {\n    //Polygon Mumbai Testnet上にいない場合、switchボタンをレンダリングします。\n    if (network !== 'Polygon Mumbai Testnet') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please switch to Polygon Mumbai Testnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: switchNetwork,\n          children: \"Click here to switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 4\n      }, this);\n    } //else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur horsepower?\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 4\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: loading,\n          onClick: updateDomain,\n          children: \"Set record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: () => {\n            setEditing(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 5\n      }, this) :\n      /*#__PURE__*/\n      // editing 変数が true でない場合、Mint ボタンが代わりに表示されます。\n      _jsxDEV(\"button\", {\n        className: \"cta-button mint-button\",\n        disabled: loading,\n        onClick: mintDomain,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 3\n    }, this);\n  };\n  //};\n\n  const renderMints = () => {\n    if (currentAccount && mints.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mint-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \" Recently minted domains!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mint-list\",\n          children: mints.map((mint, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mint-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mint-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  href: 'https://testnets.opensea.io/assets/mumbai/${CONTRACT_ADDRESS}/${mint.id}',\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"underlined\",\n                    children: [' ', mint.name, tld, ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 10\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 9\n                }, this), mint.owner.toLowerCase() === currentAccount.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => editRecord(mint.name),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"edit-icon\",\n                    src: \"https://img.icons8.com/metro/26/000000/pencil.png\",\n                    alt: \"Edit button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 10\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 10\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", mint.record, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 8\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 8\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 4\n      }, this);\n    }\n  };\n  {\n    !currentAccount && renderNotConnectedContainer();\n  }\n  {\n    currentAccount && renderInputForm();\n  }\n  {\n    mints && renderMints();\n  }\n\n  // edit モードを設定します。\n  const editRecord = name => {\n    console.log(\"Editing record for\", name);\n    setEditing(true);\n    setDomain(name);\n  };\n\n  // ページがリロードされると呼び出されます。\n  useEffect(() => {\n    checkIfWalletIsConnected();\n\n    // currentAccount, network が変わるたびに実行されます。\n    if (network === 'Polygon Mumbai Testnet') {\n      fetchMints();\n    }\n    // },[]);\n  }, [currentAccount, network]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDEEBAirport Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your Airport on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Network logo\",\n              className: \"logo\",\n              src: network.includes(\"Polygon\") ? polygonLogo : ethLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 8\n            }, this), currentAccount ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Wallet: \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Clutch disengageed \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 104\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 5\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), renderNotConnectedContainer(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"TWiSwiQIqTj0yehKyBT3hxKEh+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","contractAbi","polygonLogo","ethLogo","networks","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","_s","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","network","setNetwork","editing","setEditing","loading","setLoading","mints","setMints","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","switchNetwork","params","chainId","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","checkIfWalletIsConnected","length","account","on","handleChainChanged","_chainId","location","reload","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","setTimeout","fetchMints","names","getAllNames","mintRecords","Promise","all","map","mintRecord","records","owner","domains","id","indexOf","updateDomain","renderNotConnectedContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderInputForm","type","placeholder","onChange","e","target","disabled","renderMints","mint","index","href","rel","toLowerCase","editRecord","includes","slice","_c","$RefreshReg$"],"sources":["/Users/007/DEV/Unchain/cool-domains/frontend/domain-starter-project/src/App.js"],"sourcesContent":["// import React from 'react';\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\"\nimport {ethers} from \"ethers\";\nimport contractAbi from \"./utils/contractABI.json\";\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { networks } from './utils/networks';\n\n// Constants\nconst TWITTER_HANDLE = '_UNCHAIN';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst tld = \".APT\";\n//\"YOUR_CONTRACT_ADDRESS_HERE\"\nconst CONTRACT_ADDRESS = \"0x57BD9C3BE3e28d8084B7e462e69a611be117837E\";\n\nconst App = () => {\n  //ユーザーのウォレットアドレスをstate管理しています。冒頭のuseStateのインポートを忘れないでください。\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  // state管理するプロパティを追加しています。\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  // network を状態変数として設定します。\n  const [network, setNetwork] = useState(\"\");\n  // 新しい状態変数を定義しています。これまでのものの下に追加しましょう。\n  const [editing, setEditing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  // 状態を管理する mints を定義します。初期状態は空の配列です。\n  const [mints, setMints] = useState([]);\n\n  // connectWallet 関数を定義\n  const connectWallet = async () => {\n\ttry {\n\t\tconst { ethereum } = window;\n\n\t\tif (!ethereum) {\n\t\t\talert(\"Get Metamask -> https://metamask.io/\");\n\t\t\treturn;\n\t\t}\n\n\t\t// アカウントへのアクセスを要求するメソッドを使用します。\n\t\tconst accounts = await ethereum.request({\n\t\t\tmethod: \"eth_requestAccounts\"\n\t\t});\n\n\t\t// Metamask を一度認証すれば Connected とコンソールに表示されます。\n\t\tconsole.log(\"Connected\", accounts[0]);\n\t\tsetCurrentAccount(accounts[0]);\n\t} catch (error) {\n\t  console.log(error);\n\t}\n  };\n\n  const switchNetwork = async () => {\n\tif (window.ethereum) {\n\t\ttry {\n\t\t\t// Mumbai testnet に切り替えます。\n\t\t\tawait window.ethereum.request({\n\t\t\t\tmethod: 'wallet_switchEthereumChain',\n\t\t\t\tparams: [{ chainId: '0x13881' }],// utilsフォルダ内のnetworks.js を確認しましょう。0xは16進数です。\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// このエラーコードは当該チェーンがメタマスクに追加されていない場合です。\n      \t\t// その場合、ユーザーに追加するよう促します。\n\t\t\tif (error.code === 4902) {\n\t\t\t\ttry {\n\t\t\t\t\tawait window.ethereum.request({\n\t\t\t\t\t\tmethod: 'wallet_addEthereumChain',\n\t\t\t\t\t\tparams: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tchainId: '0x13881',\n\t\t\t\t\t\t\t\tchainName: 'Polygon Mumbai Testnet',\n\t\t\t\t\t\t\t\trpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n\t\t\t\t\t\t\t\tnativeCurrency: {\n\t\t\t\t\t\t\t\t\tname: \"Mumbai Matic\",\n\t\t\t\t\t\t\t\t\tsymbol: \"MATIC\",\n\t\t\t\t\t\t\t\t\tdecimals: 18\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tblockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(error);\n\t\t}\n\t} else {\n\t\t// window.ethereum が見つからない場合メタマスクのインストールを促します。\n\t\talert('Metamask is not installed. Please install it to use this app: https://metamask.io/download.html');\n\t}\n  };\n\n\n  // ウォレットの接続を確認します。\n  //const checkIfWalletIsConnected = () => {\n  const checkIfWalletIsConnected = async () => {\n\t // window.ethereumの設定。この表記法はJavascriptの「分割代入」を参照。\n\t const {ethereum} = window;\n\n\t if (!ethereum) {\n\t\tconsole.log(\"Make sure you have Metamask!\");\n\t\treturn;\n\t } else {\n\t\tconsole.log(\"You have the ethereum object\", ethereum);\n\t }\n\n\t // ユーザーのウォレットをリクエストします。\n\t const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n\t // ユーザーが複数のアカウントを持っている場合もあります。ここでは最初のアドレスを使います。\n\t if (accounts.length !==0) {\n\t\tconst account = accounts[0];\n\t\tconsole.log(\"Found an authorized account:\", account);\n\t\tsetCurrentAccount(account);\n\t } else {\n\t\tconsole.log(\"No authorized account found\");\n\t }\n\n\t // ユーザーのネットワークのチェーンIDをチェックします。\n\tconst chainId = await ethereum.request({ method: 'eth_chainId' });\n\tsetNetwork(networks[chainId]);\n\n\tethereum.on('chainChanged', handleChainChanged);\n\n\t// ネットワークが変わったらリロードします。\n\tfunction handleChainChanged(_chainId) {\n\t\twindow.location.reload();\n\t}\n  };\n\nconst mintDomain = async () => {\n\t// ドメインがnullのときrunしません。\n\tif (!domain) {return}\n\t// ドメインが3文字に満たない、短すぎる場合にアラートを出します。\n\tif (domain.length < 3) {\n\t\talert('Domain must be at least 3 characters long');\n\t\treturn;\n\t}\n\t// ドメインの文字数に応じて価格を計算します。\n  \t// 3 chars = 0.05 MATIC, 4 chars = 0.03 MATIC, 5 or more = 0.01 MATIC\n\tconst price = \n\t\t// domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n\t\tdomain.length === 3 ? '0.005' : domain.length === 4 ? '0.003' : '0.001';\n\tconsole.log(\"Minting domain\", domain, \"with price\", price);\n\ttry {\n\t\tconst {ethereum} = window;\n\t\tif (ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst contract = new ethers.Contract(\n\t\t\t\tCONTRACT_ADDRESS,\n\t\t\t\tcontractAbi.abi,\n\t\t\t\tsigner\n\t\t\t);\n\n\t\t\tconsole.log(\"Going to pop wallet now to pay gas...\");\n\t\t\t  let tx = await contract.register(domain, {\n\t\t\t\tvalue: ethers.utils.parseEther(price)});\n\t\t\t// ミントされるまでトランザクションを待ちます。\n\t\t\tconst receipt = await tx.wait();\n\n\t\t\t// トランザクションが問題なく実行されたか確認します。\n\t\t\tif (receipt.status === 1) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash\n\t\t\t\t);\n\n\t\t\t\t// domainのrecordをセットします。\n\t\t\t\ttx = await contract.setRecord(domain, record);\n\t\t\t\tawait tx.wait();\n\n\t\t\t\tconsole.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n\t\t\t   // fetchMints関数実行後2秒待ちます。\n\t\t\t   setTimeout(() => {\n\t\t\t\tfetchMints();\n\t\t\t   }, 2000);\n\n\t\t\t\tsetRecord('');\n\t\t\t\tsetDomain('');\n\t\t\t} else {\n\t\t\t\talert(\"Transaction failed! Please try again\");\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t  console.log(error);\n\t}\n};\n\n\nconst fetchMints = async () => {\n\ttry {\n\t\tconst {ethereum} = window;\n\t\tif (ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n\n\t\t\t// すべてのドメインを取得します。\n\t\t\tconst names = await contract.getAllNames();\n\n\t\t\t// ネームごとにレコードを取得します。マッピングの対応を理解しましょう。\n\t\t\tconst mintRecords = await Promise.all(names.map(async (name) => {\n\t\t\tconst mintRecord = await contract.records(name);\n\t\t\tconst owner = await contract.domains(name);\n\t\t\treturn {\n\t\t\t\tid: names.indexOf(name),\n\t\t\t\tname: name,\n\t\t\t\trecord: mintRecord,\n\t\t\t\towner: owner,\n\t\t\t};\n\t\t\t}));\n\n\t\t\tconsole.log(\"MINTS FETCHED\", mintRecords);\n\t\t\tsetMints(mintRecords);\n\t\t}\n\t} catch(error) {\n\t  console.log(error);\n\t}\n}\n\n\n\n   const updateDomain = async () => {\n\tif (!record || !domain) { return }\n\tsetLoading(true);\n\tconsole.log(\"Updating domain\", domain, \"with record\", record);\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\t\t\tif (ethereum) {\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n\n\t\t\t\tlet tx = await contract.setRecord(domain, record);\n\t\t\t\tawait tx.wait();\n\t\t\t\tconsole.log(\"Record set https://mumbai.polygonscan.com/tx/\"+tx.hash);\n\n\t\t\t\tfetchMints();\n\t\t\t\tsetRecord('');\n\t\t\t\tsetDomain('');\n\t\t\t}\n\t\t} catch(error) {\n\t\t  console.log(error);\n\t\t}\n\t   setLoading(false);\n    }\n\n   // まだウォレットに接続されていない場合のレンダリングです。\n   const renderNotConnectedContainer = () => (\n\t\n\t<div className = \"connect-wallet-container\">\n\t\t<img\n\t\t  src = \"https://media.giphy.com/media/yy6hXyy2DsM5W/giphy-downsized-large.gif\"\n\t\t  //src = \"https://media.giphy.com/media/1msxZUIsqN5pide6o5/giphy.gif\" \n\t\t  //src = \"https://media.giphy.com/media/iDJQRjTCenF7A4BRyU/giphy.gif\"\n\t\t  //src = \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n\t\t  alt = \"Ninja gif\"\n\t\t/>\n\t\t{/* Connect Wallet ボタンが押されたときのみ connectWallet関数 を呼び出します。 */}\n\t\t{/* <button className = \"cta-button connect-wallet-button\"> */}\n\t\t\n\t\t<button \n\t\t\tonClick={connectWallet}\n\t\t\tclassName = \"cta-button connect-wallet-button\"\n\t\t>\n\t\t\t Connect Wallet <p>🔜Clutch Switch Engage</p>\n\t\t</button>\n\t</div>\n   );\n\n   // ドメインネームとデータの入力フォームです。\n   const renderInputForm = () => {\n\t\n\t//Polygon Mumbai Testnet上にいない場合、switchボタンをレンダリングします。\n\tif (network !== 'Polygon Mumbai Testnet') {\n\t\treturn (\n\t\t\t<div className=\"connect-wallet-container\">\n\t\t\t\t{/* <p>Please connect to the Polygon Mumbai Testnet</p> */}\n\t\t\t\t<p>Please switch to Polygon Mumbai Testnet</p>\n\t\t\t\t{/* 今ボタンで switchNetwork 関数を呼び出します。 */}\n\t\t\t\t<button className='cta-button mint-button' onClick={switchNetwork}>Click here to switch</button>\n\t\t\t</div>\n\t\t);\n\t} //else {\n\treturn (\n\t\t<div className=\"form-container\">\n\t\t\t<div className=\"first-row\">\n\t\t\t\t<input\n\t\t\t\t  type=\"text\"\n\t\t\t\t  value={domain}\n\t\t\t\t  placeholder='domain'\n\t\t\t\t  onChange={(e) => setDomain(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<p className='tld'> {tld} </p>\n\t\t\t</div>\n\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={record}\n\t\t\t\tplaceholder='whats ur horsepower?'\n\t\t\t\tonChange={(e) => setRecord(e.target.value)}\n\t\t\t/>\n\t\t\t{/* editing 変数が true の場合、\"Set record\" と \"Cancel\" ボタンを表示します。 */}\n\t\t\t{ editing ? (\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t{/* updateDomain関数を呼び出します。 */}\n\t\t\t\t\t<button className='cta-button mint-button' disabled={loading} onClick={updateDomain}>\n\t\t\t\t\t\tSet record\n\t\t\t\t\t</button>\n\t\t\t\t\t {/* editing を false にしてEditモードから抜けます。*/}\n\t\t\t\t\t <button className='cta-button mint-button' onClick={() => {setEditing(false)}}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t </button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t// editing 変数が true でない場合、Mint ボタンが代わりに表示されます。\n\t\t\t\t<button className='cta-button mint-button' disabled={loading} onClick={mintDomain}>\n\t\t\t\t\tMint\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{/* <div className=\"button-container\"> */}\n\t\t\t\t{/* ボタンクリックで mintDomain関数 を呼び出します。 */}\n\t\t\t\t{/* <button\n\t\t\t\t\tclassName=\"cta-buton mint-button\"\n\t\t\t\t\t//disabled={null}\n\t\t\t\t\tonClick={null}\n\t\t\t\t>\n\t\t\t\t\tMint\n\t\t\t\t</button> */}\n\t\t\t\t{/* <button\n\t\t\t\t\tclassName=\"cta-button mint-button\"\n\t\t\t\t\tdisabled={null}\n\t\t\t\t\tonClick={null}\n\t\t\t\t>\n\t\t\t\t\tSet data\n\t\t\t\t</button> */}\n\t\t\t{/* </div> */}\n\t\t</div>\n\t);\n   };\n   //};\n\n   const renderMints = () => {\n\tif (currentAccount && mints.length > 0) {\n\t\treturn (\n\t\t\t<div className=\"mint-container\">\n\t\t\t\t<p className=\"subtitle\"> Recently minted domains!</p>\n\t\t\t\t<div className=\"mint-list\">\n\t\t\t\t\t{mints.map((mint, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"mint-item\" key={index}>\n\t\t\t\t\t\t\t  <div className='mint-row'>\n\t\t\t\t\t\t\t\t<a className=\"link\" href={'https://testnets.opensea.io/assets/mumbai/${CONTRACT_ADDRESS}/${mint.id}'}target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t<p className=\"underlined\">{' '}{mint.name}{tld}{' '}</p>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t {/* mint.owner が currentAccount なら edit ボタンを追加します。 */}\n\t\t\t\t\t\t\t\t {mint.owner.toLowerCase() === currentAccount.toLowerCase()?\n\t\t\t\t\t\t\t\t <button className=\"edit-button\" onClick={() => editRecord(mint.name)}>\n\t\t\t\t\t\t\t\t\t<img className=\"edit-icon\" src=\"https://img.icons8.com/metro/26/000000/pencil.png\" alt=\"Edit button\" />\n\t\t\t\t\t\t\t\t </button>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull \n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t<p> {mint.record} </p>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n   };\n\n{!currentAccount && renderNotConnectedContainer()}\n{currentAccount && renderInputForm()}\n{mints && renderMints()}\n\n   // edit モードを設定します。\n   const editRecord = (name) => {\n\tconsole.log(\"Editing record for\", name);\n\tsetEditing(true);\n\tsetDomain(name);\n   }\n\n\n   // ページがリロードされると呼び出されます。\n   useEffect(() => {\n\tcheckIfWalletIsConnected();\n  \n   // currentAccount, network が変わるたびに実行されます。\n   if (network === 'Polygon Mumbai Testnet') {\n\tfetchMints();\n   }\n   // },[]);\n   },[currentAccount, network]);\n\n   return (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<header>\n            \t\t\t<div className=\"left\">\n             \t\t\t\t <p className=\"title\">🛫Airport Name Service</p>\n             \t\t\t\t <p className=\"subtitle\">Your Airport on the blockchain!</p>\n            \t\t\t</div>\n\t\t\t\t\t\t {/* Display a logo and wallet connection status*/}\n\t\t\t\t\t\t <div className=\"right\">\n\t\t\t\t\t\t\t<img alt=\"Network logo\" className=\"logo\" src={ network.includes(\"Polygon\") ? polygonLogo : ethLogo} />\n\t\t\t\t\t\t\t{ currentAccount ? <p> Wallet: {currentAccount.slice(0, 6)}...{currentAccount.slice(-4)} </p> : <p> Clutch disengageed </p> }\n\t\t\t\t\t\t </div>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\n\t\t\t\t{/* currentAccount が存在しない場合、Connect Wallet ボタンを表示します*/}\n\t\t\t\t{!currentAccount && renderNotConnectedContainer()}\n\t\t\t\t{/* アカウントが接続されるとインプットフォームをレンダリングします。 */}\n\t\t\t\t{currentAccount && renderInputForm()}\n\n\t\t\t\t{/* render 関数をここに追加します */}\n\t\t\t\t{renderNotConnectedContainer()} \n\n        \t\t<div className=\"footer-container\">\n\t\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"footer-text\"\n\t\t\t\t\t\thref={TWITTER_LINK}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{`built with @${TWITTER_HANDLE}`}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}